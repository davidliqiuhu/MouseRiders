@model MouseRidersWeb.DTO.ArticuloDTO

@{
    ViewBag.Title = "Details";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    int rolSession = 0;
    String emailSession = "";
    bool haySession;
    if (@Session["user_rol"] != null)
    {
        haySession = Int32.TryParse(@Session["user_rol"].ToString(), out rolSession);
    }
    else
    {
        haySession = false;
    }
    if (@Session["user_email"] != null)
    {
        emailSession = @Session["user_email"].ToString();
    }
}

<header>
    <script src="http://www.w3schools.com/lib/w3data.js"></script>
    <h1>
        @Html.DisplayFor(model => model.Titulo)
    </h1>

    <h2>
        @Html.DisplayFor(model => model.Subtitulo)
    </h2>

</header>
<main>
    <div w3-include-html="~/Contenido/Articulos/@Html.DisplayFor(model => model.Contenido)"></div>
    <script>
        w3IncludeHTML();
    </script>


</main>

<fieldset>

    <div class="display-field" id="autorA">
        Escrito por <a href="@Url.Action("Details", "Usuario", new { id = @Html.DisplayFor(model => model.ID_Creador) })"> @Html.DisplayFor(model => model.Autor)</a>
    </div>

    <div class="display-field" id="fechaA">
        @Html.DisplayFor(model => model.Fecha)
    </div>

    <div id="valA">
        @using (Ajax.BeginForm("AnyadirEstrellas", "Articulo", new { id = Model.Id },
                 new AjaxOptions
                 {
                     HttpMethod = "post"
                 }))
        {
            <span>Valoración de los usuarios:</span>
            <span id="valnumA" class="display-field">
                @Html.DisplayFor(model => model.Puntuacion)
            </span>
            <span id="stars-existing" class="starrr" data-rating='@Html.DisplayFor(modelItem => Model.Puntuacion)'></span>
            <input type="hidden" name="valoracion" value="0">
        }
    </div>
    @if ((Session["user_email"] != null && Session["user_email"].ToString() != ""))
    {
        <a class="btn btn-default btn-lg btn-block" href="~\Contenido\Articulos/@Html.DisplayFor(model => model.ContenidoDescargable)">Ver archivo PDF</a>
    }

    <p id="editA">
        @if ((Session["user_rol"] != null && Session["user_rol"].ToString() == "2") || (Session["user_rol"] != null && Session["user_rol"].ToString() == "3"))
        {
            @Html.ActionLink("Editar", "Edit", new { id = Model.Id }, new { @class = "btn btn-primary btn-xs  " })
            @Html.ActionLink("Eliminar", "Delete", new { id = Model.Id }, new { @class = "btn btn-danger btn-xs  " })
        }
    </p>

</fieldset>

<fieldset>
    <h2>Comentarios</h2>
    @foreach (var item in Model.Comentario)
    {
        Html.RenderAction("Details", "Comentario", new { id = item.Id });
    }
    <div>

        @if (haySession)
        {
            using (Html.BeginForm("FastCreate", "Comentario"))
            {
                @Html.AntiForgeryToken()
                @Html.ValidationSummary(true)
                @Html.Label("Comentario", "Añadir comentario")
                <br />
                //TextArea
                <textarea rows=8 id="comentar" name="Comentario" placeholder="Escriba aquí su comentario"></textarea>
                //TODO: Hacerlo que sea por parametro de sesion
                <input type="hidden" name="usuario" value="@emailSession">
                <input type="hidden" name="hilo" value="0">
                <input type="hidden" name="articulo" value="@Model.Id">
                <div><input type="submit" value="Comentar" class="btn btn-default btn-lg btn-block btn-primary" /></div>
            }
        }
    </div>
</fieldset>

@Html.ActionLink("Volver", "Index", "Seccion", null, new { @class = "btn btn-default btn-lg btn-block" })

<script>
    $('.votar').click(function (e) {
        e.preventDefault();
        var puntuacion_actual = $(this).parent().children("input:hidden[name=valoracion]").val();
        puntuacion_actual = parseInt(puntuacion_actual) + parseInt($(this).val());
        $(this).parent("form").children("input:hidden[name=valoracion]").val(puntuacion_actual);
        $(this).parent("form").submit();
        $(this).parent("form").parent("#valC").submit();
        $(this).parent("form").children("#valC_value").text("Puntuación: " + puntuacion_actual);
    });
</script>

<script>
    function Star() {
        // Starrr plugin (https://github.com/dobtco/starrr)
        var __slice = [].slice;

        (function ($, window) {
            var Starrr;

            Starrr = (function () {
                Starrr.prototype.defaults = {
                    rating: void 0,
                    numStars: 5

                };

                function Starrr($el, options) {
                    var _ref = this.defaults, _this = this;
                    this.options = $.extend({}, this.defaults, options);
                    this.$el = $el;
                    var i, _;
                    for (i in _ref) {
                        _ = _ref[i];
                        if (this.$el.data(i) != null) {
                            this.options[i] = this.$el.data(i);
                        }
                    }
                    this.createStars();
                    this.syncRating();
                    @if (rolSession == 2)
                    {
                        <text>  return null;</text>
                    }
                    else
                    {
                        <text>
                    this.$el.on('mouseover.starrr', 'span', function (e) {
                        return _this.syncRating(_this.$el.find('span').index(e.currentTarget) + 1);
                    });
                    this.$el.on('mouseout.starrr', function () {
                        return _this.syncRating();
                    });
                    this.$el.on('click.starrr', 'span', function (e) {
                        return _this.setRating(_this.$el.find('span').index(e.currentTarget) + 1);
                    });
                    </text>
                    }
                }

                Starrr.prototype.createStars = function () {
                    var _i, _ref, _results = [];
                    for (_i = 1, _ref = this.options.numStars; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--) {
                        _results.push(this.$el.append("<span class='glyphicon .glyphicon-star-empty'></span>"));
                    }
                    return _results;
                };

                Starrr.prototype.setRating = function (rating) {
                    if (this.options.rating === rating) {
                        return;
                    }
                    this.options.rating = rating;
                    this.syncRating();

                    //EDIT SHIZER
                    this.$el.parent("form").children("input:hidden[name=valoracion]").val(rating);
                    this.$el.parent("form").submit();
                    this.$el.parent("form").children("#valnumA").text(rating);
                    
                    //EDIT SHIZER
                    return;
                };

                Starrr.prototype.syncRating = function (rating) {
                    var i, _i, _j, _ref;

                    rating || (rating = this.options.rating);
                    if (rating) {
                        for (i = _i = 0, _ref = rating - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
                            this.$el.find('span').eq(i).removeClass('glyphicon-star-empty').addClass('glyphicon-star');
                        }
                    }
                    if (rating && rating < 5) {
                        for (i = _j = rating; rating <= 4 ? _j <= 4 : _j >= 4; i = rating <= 4 ? ++_j : --_j) {
                            this.$el.find('span').eq(i).removeClass('glyphicon-star').addClass('glyphicon-star-empty');
                        }
                    }
                    if (!rating) {
                        return this.$el.find('span').removeClass('glyphicon-star').addClass('glyphicon-star-empty');
                    }
                };

                return Starrr;

            })();
            return $.fn.extend({
                starrr: function () {
                    var args = 2 <= arguments.length ? __slice.call(arguments, 1) : [],
                        option = arguments[0];
                    return this.each(function () {
                        var data = $(this).data('star-rating');
                        if (!data) {
                            $(this).data('star-rating', (data = new Starrr($(this), option)));
                        }
                        if (typeof option === 'string') {
                            return data[option].apply(data, args);
                        }
                    });
                }
            });
        })(window.jQuery, window);

        $(function () {
            @if (!haySession){
                @:return $(".starrr").starrr();
                                                                                                                                            }
            else
            {
                @:return $(".starrr").starrr({ readOnly: true });
                                                                                                                                            }
        });
    }
    $(document).ajaxStop(function () {
        // 0 === $.active
        Star();
    });
    Star();
</script>
