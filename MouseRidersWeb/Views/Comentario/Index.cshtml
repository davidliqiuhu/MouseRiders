@model IEnumerable<MouseRidersGenNHibernate.DTO.MouseRiders.ComentarioDTO>

@{
    ViewBag.Title = "Index";
    Layout = "~/Views/Shared/_Layout.cshtml";
}
@{
    int rolSession = 0;
    bool noSession;
    if (@HttpContext.Current.Session["user_rol"] != null)
    {
        noSession = Int32.TryParse(@HttpContext.Current.Session["user_rol"].ToString(), out rolSession);
    }
    else
    {
        noSession = true;
    }
}
<h2>Index</h2>


  
<p>
    @Html.ActionLink("Create New", "Create")
</p>

@if(Model==null){
    @Html.Partial("_Comentario", new List<MouseRidersGenNHibernate.DTO.MouseRiders.ComentarioDTO>());
}
else
{
    @Html.Partial("_Comentario", Model);
}
@using (Ajax.BeginForm("Index", "Comentario", new {},
    new AjaxOptions
    {
        HttpMethod = "get",
        InsertionMode = InsertionMode.Replace,
        UpdateTargetId = "prueba"
    }))
{
    <input type="hidden" name="minimo" value="0">
    <ul class="pagination">
        <li class="active"><a href="#">1</a></li>
        <li><a href="#">2</a></li>
        <li><a href="#">3</a></li>
        <li><a href="#">4</a></li>
        <li><a href="#">5</a></li>
    </ul>
}


<script>
    function Star() {
        // Starrr plugin (https://github.com/dobtco/starrr)
        var __slice = [].slice;

        (function ($, window) {
            var Starrr;

            Starrr = (function () {
                Starrr.prototype.defaults = {
                    rating: void 0,
                    numStars: 5,
                    readOnly: false,
                };

                function Starrr($el, options) {
                    var  _ref = this.defaults, _this = this;
                    this.options = $.extend({}, this.defaults, options);
                    this.$el = $el;
                    var i, _;
                    for (i in _ref) {
                        _ = _ref[i];
                        if (this.$el.data(i) != null) {
                            this.options[i] = this.$el.data(i);
                        }
                    }
                    this.createStars();
                    this.syncRating();
                    if (this.options.readOnly) {
                      return;
                    }
                    this.$el.on('mouseover.starrr', 'span', function (e) {
                        return _this.syncRating(_this.$el.find('span').index(e.currentTarget) + 1);
                    });
                    this.$el.on('mouseout.starrr', function () {
                        return _this.syncRating();
                    });
                    this.$el.on('click.starrr', 'span', function (e) {
                        return _this.setRating(_this.$el.find('span').index(e.currentTarget) + 1);
                    });
                }

                Starrr.prototype.createStars = function () {
                    var _i, _ref, _results = [];
                    for (_i = 1, _ref = this.options.numStars; 1 <= _ref ? _i <= _ref : _i >= _ref; 1 <= _ref ? _i++ : _i--) {
                        _results.push(this.$el.append("<span class='glyphicon .glyphicon-star-empty'></span>"));
                    }
                    return _results;
                };

                Starrr.prototype.setRating = function (rating) {
                    if (this.options.rating === rating) {
                        return;
                    }
                    this.options.rating = rating;
                    this.syncRating();

                    //EDIT SHIZER
                    this.$el.parent("form").children("input:hidden[name=valoracion]").val(rating);
                    this.$el.parent("form").submit();
                    //EDIT SHIZER
                    return;
                };

                Starrr.prototype.syncRating = function (rating) {
                    var i, _i, _j, _ref;

                    rating || (rating = this.options.rating);
                    if (rating) {
                        for (i = _i = 0, _ref = rating - 1; 0 <= _ref ? _i <= _ref : _i >= _ref; i = 0 <= _ref ? ++_i : --_i) {
                            this.$el.find('span').eq(i).removeClass('glyphicon-star-empty').addClass('glyphicon-star');
                        }
                    }
                    if (rating && rating < 5) {
                        for (i = _j = rating; rating <= 4 ? _j <= 4 : _j >= 4; i = rating <= 4 ? ++_j : --_j) {
                            this.$el.find('span').eq(i).removeClass('glyphicon-star').addClass('glyphicon-star-empty');
                        }
                    }
                    if (!rating) {
                        return this.$el.find('span').removeClass('glyphicon-star').addClass('glyphicon-star-empty');
                    }
                };

                return Starrr;

            })();
            return $.fn.extend({
                starrr: function () {
                    var args = 2 <= arguments.length ? __slice.call(arguments, 1) : [],
                        option = arguments[0];
                    return this.each(function () {
                        var data = $(this).data('star-rating');
                        if (!data) {
                            $(this).data('star-rating', (data = new Starrr($(this), option)));
                        }
                        if (typeof option === 'string') {
                            return data[option].apply(data, args);
                        }
                    });
                }
            });
        })(window.jQuery, window);

        $(function () {
            @if (!noSession){
                @:return $(".starrr").starrr();
            }
            else
            { 
                @:return $(".starrr").starrr({readOnly: true});
            }
        });
    }
</script>

<script>
    $('.pagination li a').click(function () {
        $(".active").removeClass("active");
        $(this).parent().addClass("active");
        var clickedPage = $(this).html().valueOf() - 1;
        $("input:hidden[name=minimo]").val(clickedPage);
        $(".pagination").parent("form").submit();
        
    });
    $(document).ajaxStop(function () {
        // 0 === $.active
        Star();
    });
    Star();
</script>
<div>

@if (noSession)
{
    using (Html.BeginForm("FastCreate","Comentario")) {
        @Html.AntiForgeryToken()
        @Html.ValidationSummary(true)
        @Html.Label("Comentario","Comentario rápido")
    <br />
        //TextArea
        @Html.TextArea("Comentario", new { rows = 4, columns = 200, @style = "width: 450px;", @placeholder = @Html.DisplayNameFor(model => model.Contenido) })
    //TODO: Hacerlo que sea por parametro de sesion
        <input type="hidden" name="usuario" value="usuario@gmail.com">
        <input type="submit" value="Create" />
    }
}
</div>
